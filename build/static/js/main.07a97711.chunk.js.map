{"version":3,"sources":["assets/logo.png","assets/eye.svg","components/login/Login.jsx","assets/linkedin.svg","assets/insta.svg","assets/twitter.svg","assets/youtube.svg","assets/facebook.svg","components/Update/Update.jsx","components/Register/cropImage.js","assets/upload.svg","components/Register/CreatorRegistraion.jsx","components/Update/UpdateCreator.jsx","components/login/Signup.jsx","components/Navbar/Navbar.jsx","components/Footer/Footer.jsx","App.jsx","Context/Dragcontext.js","index.js","assets/categories.js","assets/close_icon.svg","components/Dropdown/Dropdown.jsx"],"names":["dotenv","config","Login","Update","getCroppedImg","async","imageSrc","pixelCrop","rotation","arguments","length","undefined","flip","horizontal","vertical","image","createImage","canvas","document","createElement","ctx","getContext","rotRad","getRadianAngle","width","bBoxWidth","height","bBoxHeight","Math","abs","cos","sin","rotateSize","translate","rotate","scale","drawImage","croppedCanvas","croppedCtx","x","y","Promise","resolve","reject","toBlob","file","URL","createObjectURL","url","Image","addEventListener","error","setAttribute","src","degreeValue","PI","CreatorRegistration","_ref","close","setImage","useState","crop","setCrop","zoom","setZoom","croppedAreaPixels","setCroppedAreaPixels","croppedImage","setCroppedImage","phone","setPhone","isValid","setIsValid","fileInputRef","useRef","isPopupOpen","setIsPopupOpen","handleSubmit","e","preventDefault","getElementById","data","type","value","userName","location","insta","instacount","twitter","twittercount","linkedin","linkedincount","facebook","facebookcount","youtube","youtubecount","formData","FormData","key","append","profileImageFile","filename","mimeType","response","fetch","blob","File","urlToFile","target","action","method","body","credentials","then","res","json","removeAttribute","success","sessionStorage","setItem","creator","approved","alert","message","console","_jsxs","className","children","_jsx","process","REACT_APP_BASE_URL","encType","onSubmit","id","placeholder","required","categories","map","ele","onChange","event","files","ref","style","display","upload","alt","onClick","openFilePicker","current","click","Popup","open","modal","closeOnDocumentClick","onClose","_Fragment","Cropper","aspect","onCropChange","onZoomChange","onCropComplete","croppedArea","tel","test","IoClose","UpdateCreator","Signup","setResponse","isLogin","setIsLogin","name","setname","state","setstate","visible","setvisible","password","setPassword","errorMessage","setErrorMessage","clicked","setclicked","email","setEmail","isValidEmail","setIsValidEmail","errorMessageEmail","setErrorMessageEmail","isChecked","setIsChecked","showPassword","setShowPassword","useEffect","formdata","log","headers","Accept","JSON","stringify","iscreator","getItem","window","reload","handlesignup","onInput","inputEmail","validateEmail","handleEmail","fontSize","color","handlePassword","inputPassword","validatePassword","handleCheckboxChange","htmlFor","handlelogin","dotnenv","Navbar","SetBlur","State","setState","setcreator","isOpen","setIsOpen","isBlurred","setIsBlurred","toggleMenu","fetchdata","st","logout","removeItem","Link","to","logo","trigger","onOpen","nested","GiHamburgerMenu","size","Footer","href","FaInstagram","FaFacebook","FaLinkedin","FaYoutube","margin","justifyContent","fontFamily","fontWeight","textAlign","Promotions","lazy","Deals","App","isblur","BrowserRouter","Suspense","fallback","Routes","Route","path","element","DragContext","createContext","root","ReactDOM","createRoot","render","React","StrictMode","Provider","Dropdown","entries","input","category","setinput","Input","func","handleChange","item","onMouseEnter","onMouseLeave","idx","checked","includes"],"mappings":"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","file":"static/js/main.07a97711.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.563ea112.png\";","export default __webpack_public_path__ + \"static/media/eye.5e83069a.svg\";","import React, { useEffect, useState } from 'react'\r\nimport './Login.css'\r\nimport logo from '../../assets/logo.png'\r\nimport eye from '../../assets/eye.svg'\r\nimport dotenv from 'dotenv'\r\ndotenv.config();\r\n\r\n\r\nconst Login = ({ setResponse }) => {\r\n    \r\n    const [name,setname]=useState(\"\");\r\n    const [state, setstate] = useState('signup');\r\n    const [visible, setvisible] = useState(false);\r\n    const [password, setPassword] = useState('');\r\n    const [isValid, setIsValid] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [clicked, setclicked] = useState(false);\r\n    const [email, setEmail] = useState('');\r\n    const [isValidEmail, setIsValidEmail] = useState(false);\r\n    const [errorMessageEmail, setErrorMessageEmail] = useState('');\r\n    const [isChecked, setIsChecked] = useState(false);\r\n\r\n    const handleCheckboxChange = () => {\r\n      setIsChecked(!isChecked);\r\n    };\r\n\r\n    const validateEmail = (email) => {\r\n        // Basic email regex pattern\r\n        const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n        return emailPattern.test(email);\r\n    };\r\n    const handleEmail = (e) => {\r\n        const inputEmail = e.target.value;\r\n        setEmail(inputEmail);\r\n\r\n        if (validateEmail(inputEmail)) {\r\n            setIsValidEmail(true);\r\n            setErrorMessageEmail('');\r\n        } else {\r\n            setIsValidEmail(false);\r\n            setErrorMessageEmail('Please enter a valid email address');\r\n        }\r\n    };\r\n\r\n    const validatePassword = (password) => {\r\n        const minLength = 8;\r\n        const specialChar = /[!@#$%^&*(),.?\":{}|<>]/;\r\n        const upperCase = /[A-Z]/;\r\n        const lowerCase = /[a-z]/;\r\n        const number = /[0-9]/;\r\n\r\n        if (password.length < minLength) {\r\n            return 'Password must be at least 8 characters long';\r\n        }\r\n        if (!specialChar.test(password)) {\r\n            return 'Password must contain at least one special character';\r\n        }\r\n        if (!upperCase.test(password)) {\r\n            return 'Password must contain at least one uppercase letter';\r\n        }\r\n        if (!lowerCase.test(password)) {\r\n            return 'Password must contain at least one lowercase letter';\r\n        }\r\n        if (!number.test(password)) {\r\n            return 'Password must contain at least one number';\r\n        }\r\n        return '';\r\n    };\r\n    useEffect(() => {\r\n\r\n        const password = document.getElementById('password');\r\n        if (visible) {\r\n            password.setAttribute('type', 'text');\r\n        }\r\n        else {\r\n\r\n            password.setAttribute('type', 'password');\r\n        }\r\n    }, [visible]);\r\n   \r\n\r\n    const handlelogin = async () => {\r\n        const formdata = {\r\n\r\n            email: document.getElementById('email').value,\r\n            password: document.getElementById('password').value,\r\n        }\r\n\r\n\r\n        await fetch(`${process.env.REACT_APP_BASE_URL}v1/apis/login`, {\r\n            credentials: 'include',\r\n            method: 'POST',\r\n\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Accept: \"application/json\"\r\n            },\r\n            body: JSON.stringify(formdata)\r\n        }).then((res) => {  return res.json(); }).then((res) => {\r\n            \r\n            if (res.success) {\r\n                alert(\"You are Successfully Logged In\");\r\n                sessionStorage.setItem('State', 'login');\r\n                setResponse(res.iscreator, sessionStorage.getItem('State'));\r\n                sessionStorage.setItem('creator', res.iscreator);\r\n                sessionStorage.setItem('email', res.email);\r\n                window.location.reload();\r\n            }\r\n            else {\r\n                alert(res.error);\r\n            }\r\n\r\n        })\r\n\r\n\r\n\r\n    }\r\n    const handleChange = (e) => {\r\n        const inputPassword = e.target.value;\r\n        setPassword(inputPassword);\r\n\r\n        const error = validatePassword(inputPassword);\r\n        setErrorMessage(error);\r\n        setIsValid(!error);\r\n    };\r\n    const handlePassword = (e) => {\r\n        if (e.target.value.length == 0 && (!clicked)) {\r\n            alert(`Password Should include:\r\n        * Password must be at least 8 characters long.\r\n        * Password must contain at least one special character.\r\n        * Password must contain at least one uppercase letter.\r\n        * Password must contain at least one lowercase letter.\r\n        * Password must contain at least one number.`\r\n            )\r\n            setclicked(true);\r\n        }\r\n    }\r\n\r\n    const handlesignup = async (e) => {\r\n        e.preventDefault();\r\n        if (isValid && isValidEmail) {\r\n            const formdata = {\r\n              name,\r\n              email,\r\n              password,\r\n              isChecked,\r\n            };\r\n\r\n            await fetch(`${process.env.REACT_APP_BASE_URL}v1/apis/signup`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    Accept: \"application/json\"\r\n                },\r\n                body: JSON.stringify(formdata),\r\n                credentials: 'include'\r\n\r\n            }).then((res) => res.json()).then(res => {\r\n                if (res.success) {\r\n                    sessionStorage.setItem('State', 'login');\r\n                    setResponse(res.iscreator, sessionStorage.getItem('State'));\r\n                    sessionStorage.setItem('creator', res.iscreator);\r\n                    sessionStorage.setItem('email', res.email);\r\n                    alert(\"Sign Up Sucessfull!\")\r\n                    window.location.reload();\r\n                }\r\n                else {\r\n                    alert(res.error);\r\n                }\r\n            })\r\n\r\n        }\r\n        else if (isValidEmail) {\r\n\r\n            alert(`Password is Invalid`);\r\n\r\n        }\r\n        else if (isValid) {\r\n            alert('Email is Invalid');\r\n        }\r\n        else {\r\n            alert(`Password and Email are Invalid`);\r\n        }\r\n    }\r\n\r\n    return (\r\n      <div className=\"login-container\">\r\n        <div className=\"top-logo\">\r\n          <img src={logo} alt=\"\" />\r\n        </div>\r\n        <div className=\"main-part\">\r\n          <div className=\"main-part-left\">\r\n            {state === \"signup\" ? <h1>Sign Up</h1> : <h1>Log In</h1>}\r\n            <div>\r\n              {state === \"signup\" ? (\r\n                <p className=\"heading\">Create an Account</p>\r\n              ) : (\r\n                <p className=\"heading\">Welcome Back!</p>\r\n              )}\r\n              <br />\r\n              {state === \"signup\" ? (\r\n                <p className=\"login\">\r\n                  Already have an account?\r\n                  <span\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={() => setstate(\"login\")}\r\n                  >\r\n                    <strong>Log In</strong>\r\n                  </span>\r\n                </p>\r\n              ) : (\r\n                <p className=\"login\">\r\n                  Don't have an account?\r\n                  <span\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={() => setstate(\"signup\")}\r\n                  >\r\n                    <strong>Sign Up</strong>\r\n                  </span>\r\n                </p>\r\n              )}\r\n            </div>\r\n            {state === \"signup\" ? (\r\n              <form onSubmit={(e) => handlesignup(e)}>\r\n                <div>\r\n                  <label htmlFor=\"name\">Name</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    id=\"name\"\r\n                    value={name}\r\n                    onChange={(e) => setname(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label htmlFor=\"email\">E-mail</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    id=\"email\"\r\n                    value={email}\r\n                    onInput={(e) => {\r\n                      handleEmail(e);\r\n                    }}\r\n                  />\r\n                  <div\r\n                    style={{\r\n                      fontSize: \"12px\",\r\n                      color: isValidEmail ? \"green\" : \"red\",\r\n                    }}\r\n                  >\r\n                    {isValidEmail ? \"Email is valid\" : errorMessageEmail}\r\n                  </div>\r\n                </div>\r\n                <div className=\"password\">\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <div>\r\n                    <input\r\n                      type=\"password\"\r\n                      name=\"password\"\r\n                      id=\"password\"\r\n                      value={password}\r\n                      onClick={(e) => handlePassword(e)}\r\n                      onChange={handleChange}\r\n                    />\r\n\r\n                    <img\r\n                      onClick={() => {\r\n                        setvisible(!visible);\r\n                      }}\r\n                      src={eye}\r\n                      alt=\"\"\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      fontSize: \"12px\",\r\n                      color: isValid ? \"green\" : \"red\",\r\n                    }}\r\n                  >\r\n                    {isValid ? \"Password is valid\" : errorMessage}\r\n                  </div>\r\n                </div>\r\n                <p className=\"brand-box\">\r\n                  <input type=\"checkbox\" onChange={handleCheckboxChange} />\r\n                  <p>check if you are a brand</p>\r\n                </p>\r\n                <button type=\"submit\">Sign Up</button>\r\n              </form>\r\n            ) : (\r\n              <form\r\n                onSubmit={(e) => {\r\n                  handlelogin();\r\n                  e.preventDefault();\r\n                }}\r\n              >\r\n                <div>\r\n                  <label htmlFor=\"email\">E-mail</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    id=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className=\"password\">\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    id=\"password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                  />\r\n                  <img\r\n                    onClick={() => {\r\n                      setvisible(!visible);\r\n                    }}\r\n                    src={eye}\r\n                    alt=\"show\"\r\n                  />\r\n                </div>\r\n                <button type=\"submit\">Log In</button>\r\n              </form>\r\n            )}\r\n          </div>\r\n          <div className=\"main-part-right\">\r\n            <img src={logo} alt=\"\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Login\r\n","export default __webpack_public_path__ + \"static/media/linkedin.2ee609f1.svg\";","export default __webpack_public_path__ + \"static/media/insta.3aca46a1.svg\";","export default __webpack_public_path__ + \"static/media/twitter.c6558fe3.svg\";","export default __webpack_public_path__ + \"static/media/youtube.d9a7bb5e.svg\";","export default __webpack_public_path__ + \"static/media/facebook.a53b13c4.svg\";","import React,{useState} from 'react'\r\nimport \"../Register/Register.css\";\r\nimport categories from '../../assets/categories'\r\nimport images from '../../assets/images'\r\nimport close_icon from '../../assets/close_icon.svg'\r\nimport dotenv from 'dotenv'\r\nimport Dropdown from '../Dropdown/Dropdown'\r\ndotenv.config();\r\n\r\n\r\nvar img;\r\nconst Update = ({ close }) => {\r\n    const { linkedin, insta, twitter, youtube, facebook } = images;\r\n    const [visible,setvisible]=useState(false);\r\n    const [locations,setlocations]=useState([]);\r\n    const [isValid,setisValid]=useState(true);\r\n\r\n    const input=(data)=>{\r\n           \r\n        document.getElementById('location').value=data;\r\n        setvisible(false);\r\n        \r\n            }\r\n\r\n    const handleLocation=(e)=>{\r\n            fetch(`https://nominatim.openstreetmap.org/search?q=${e.target.value}&format=json`)\r\n            .then((res)=>res.json())\r\n            .then(res=>{\r\n                \r\n              let arr= res.map((ele)=>{\r\n                return ele.display_name;\r\n               })\r\n               setlocations(arr);\r\n             \r\n               setvisible(true);\r\n            })\r\n    }\r\n    function debounce(handleLocation, delay, e) {\r\n        let timeoutId;\r\n      \r\n          if (timeoutId) {\r\n          \r\n            clearTimeout(timeoutId);\r\n          }\r\n          timeoutId = setTimeout(() => {\r\n           handleLocation(e);\r\n          }, delay);\r\n        \r\n      }\r\n      const handlePhone=(e)=>{\r\n        const tel=e.target.value;\r\n        \r\n        \r\n            if(tel.length===10){\r\n                const regex = /^[1-9][0-9]*$/;\r\n                if(!(regex.test(tel))){\r\n                   setisValid(false);\r\n                } \r\n                else setisValid(true);\r\n                \r\n             }\r\n             else {\r\n                if(tel.length>0){\r\n                    setisValid(false);\r\n                }\r\n                else setisValid(true);\r\n             }\r\n        \r\n\r\n        \r\n      }\r\n\r\n      const handlesubmit = async (e) => {\r\n\r\n        e.preventDefault();\r\n        if(img!=null){\r\n        if(((img.size<=1024*1024) && isValid)){\r\n            document.getElementById('update-btn').setAttribute('disabled','true');\r\n        const data = {\r\n            type: document.getElementById('type').value,\r\n            userName: document.getElementById('username').value,\r\n            location: document.getElementById('location').value,\r\n            phone: document.getElementById('phone').value,\r\n            profileImage: img,\r\n            insta: document.getElementById('instaurl').value,\r\n            instacount: (document.getElementById('instacount').value),\r\n            twitter: document.getElementById('twitterurl').value,\r\n            twittercount: (document.getElementById('twittercount').value),\r\n            linkedin: document.getElementById('linkedinurl').value,\r\n            linkedincount: (document.getElementById('linkedincount').value),\r\n            facebook: document.getElementById('facebookurl').value,\r\n            facebookcount: (document.getElementById('facebookcount').value),\r\n            youtube: document.getElementById('youtubeurl').value,\r\n            youtubecount: (document.getElementById('youtubecount').value),\r\n\r\n        }\r\n        \r\n        const formdata = new FormData();\r\n        for (let key in data) {\r\n            formdata.append(key, data[key]);\r\n        }\r\n\r\n        fetch(e.target.action, {\r\n            method: 'post',\r\n            body: formdata,\r\n            credentials: 'include',\r\n\r\n        }).then((res) => res.json()).then((res) => {\r\n            if (!res.success) {\r\n                alert(res.error);\r\n                 \r\n                 document.getElementById('update-btn').removeAttribute('disabled');\r\n            }\r\n            else {\r\n\r\n                sessionStorage.setItem('creator', true);\r\n                alert(res.message);\r\n                window.location.reload();\r\n            }\r\n        })\r\n    }\r\n    else if(img.size>1024*1024 && !isValid) {\r\n        alert(`Mobile Number is Invalid.\r\n            Image Size Exceeding 1MB`);\r\n    }\r\n    else if(img.size>1024*1024){\r\n        alert(`Image Size Exceeding 1MB`);\r\n\r\n    }\r\n    else{\r\n        alert(`Mobile Number is Invalid`);\r\n    }\r\n}\r\nelse{\r\n    if(( isValid)){\r\n        document.getElementById('update-btn').setAttribute('disabled','true');\r\n        const data = {\r\n            type: document.getElementById('type').value,\r\n            userName: document.getElementById('username').value,\r\n            location: document.getElementById('location').value,\r\n            phone: document.getElementById('phone').value,\r\n            profileImage: img,\r\n            insta: document.getElementById('instaurl').value,\r\n            instacount: (document.getElementById('instacount').value),\r\n            twitter: document.getElementById('twitterurl').value,\r\n            twittercount: (document.getElementById('twittercount').value),\r\n            linkedin: document.getElementById('linkedinurl').value,\r\n            linkedincount: (document.getElementById('linkedincount').value),\r\n            facebook: document.getElementById('facebookurl').value,\r\n            facebookcount: (document.getElementById('facebookcount').value),\r\n            youtube: document.getElementById('youtubeurl').value,\r\n            youtubecount: (document.getElementById('youtubecount').value),\r\n\r\n        }\r\n        const formdata = new FormData();\r\n        for (let key in data) {\r\n            formdata.append(key, data[key]);\r\n        }\r\n\r\n        fetch(e.target.action, {\r\n            method: 'post',\r\n            body: formdata,\r\n            credentials: 'include',\r\n\r\n        }).then((res) => res.json()).then((res) => {\r\n            if (!res.success) {\r\n                alert(res.error);\r\n                 \r\n                 document.getElementById('update-btn').removeAttribute('disabled');\r\n            }\r\n            else {\r\n\r\n                sessionStorage.setItem('creator', true);\r\n                alert(res.message);\r\n                window.location.reload();\r\n            }\r\n        })\r\n    }\r\n    else{\r\n        alert(`Mobile Number is Invalid`);\r\n    }\r\n}\r\n}\r\n    return (\r\n        <div className='register-container'>\r\n            <h3>Edit Creator Details</h3>\r\n            <form action={`${process.env.REACT_APP_BASE_URL}v1/apis/edit`} encType='multipart/form-data' method='post' onSubmit={(e) => {\r\n              \r\n                handlesubmit(e);\r\n                \r\n            }} >\r\n                <div className=\"username\">\r\n                    <label htmlFor=\"username\">User Name</label>\r\n                    <input type=\"text\" name=\"userName\" id=\"username\" />\r\n                </div>\r\n                <div className=\"Type\">\r\n                    <label htmlFor=\"type\">Type</label>\r\n                    <select name=\"type\" id=\"type\" >\r\n                        \r\n                        <option value=\" \">No Change</option>\r\n                        {\r\n                            categories.map((ele) => <option value={ele}>{ele}</option>)\r\n                        }\r\n                    </select>\r\n                </div>\r\n                <div className=\"Location\">\r\n                    <label htmlFor=\"location\">Location</label>\r\n                    <input type=\"text\" name=\"location\" id=\"location\" placeholder='City,State or Country' onInput={(e)=>{\r\n                    debounce(handleLocation,1500,e);\r\n                    }} />\r\n\r\n                   {\r\n                  (visible&&locations.length>0)?<Dropdown entries={locations} input={input} category=\"location\"/>:''\r\n}\r\n                </div>\r\n                <div className=\"contacts\">\r\n\r\n                    <div className=\"Mobile\">\r\n                        <label htmlFor=\"phone\">\r\n                            Mobile No.\r\n                        </label>\r\n                        <input type=\"tel\" onInput={(e)=>handlePhone(e)}   maxLength={10} minLength={0} name=\"phone\" id=\"phone\" placeholder='XXXXX-XXXXX' />\r\n                    </div>\r\n                    <div id='profileImage'>\r\n                        <label htmlFor=\"profileImage\">Profile Image</label>\r\n                        <input type=\"file\" accept='image/*' name=\"profileImage\" id=\"profileImage\" onChange={e => { img = e.target.files[0] }} />\r\n                        <p >{\"(File size less than 1MB)\"}</p>\r\n\r\n                    </div>\r\n                    <div className=\"insta\">\r\n                        <div>\r\n                            <label htmlFor=\"insta\"><img src={insta} />Instagram </label>\r\n                            <input type=\"url\" name=\"insta\" id=\"instaurl\" placeholder='Enter URL' />\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"insta\"><img src={insta} />Followers </label>\r\n                            <input type='number' name=\"instacount\" id=\"instacount\" min={0} />\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"linkedin\">\r\n                        <div>\r\n                            <label htmlFor=\"linkedinurl\"><img src={linkedin} />Linkedin </label>\r\n                            <input type=\"url\" name=\"linkedin\" id=\"linkedinurl\" placeholder='Enter URL' />\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"linkedincount\"><img src={linkedin} />Followers </label>\r\n                            <input type=\"number\" name=\"linkedincount\" id=\"linkedincount\" min={0} />\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"twitter\">\r\n                        <div>\r\n                            <label htmlFor=\"twitterurl\"><img src={twitter} />Twitter </label>\r\n                            <input type=\"url\" name=\"twitter\" id=\"twitterurl\" placeholder='Enter URL' />\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"twittercount\"><img src={twitter} />Followers </label>\r\n                            <input type=\"number\" name=\"twittercount\" id=\"twittercount\" min={0} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"facebook\">\r\n                        <div>\r\n                            <label htmlFor=\"facebookurl\"><img src={facebook} />Facebook </label>\r\n                            <input type=\"url\" name=\"facebook\" id=\"facebookurl\" placeholder='Enter URL' />\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"facebookcount\"><img src={facebook} />Followers </label>\r\n                            <input type=\"number\" name=\"facebookcount\" id=\"facebookcount\" min={0} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"youtube\">\r\n                        <div>\r\n                            <label htmlFor=\"youtubeurl\"><img src={youtube} />Youtube </label>\r\n                            <input type=\"url\" name=\"youtube\" id=\"youtubeurl\" placeholder='Enter URL' />\r\n                        </div>\r\n                        <div>\r\n                            <label htmlFor=\"youtubecount\"><img src={youtube} />Followers </label>\r\n                            <input type=\"number\" name=\"youtubecount\" id=\"youtubecount\" min={0} />\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n\r\n                <button id='update-btn' type=\"submit\">Submit</button>\r\n            </form>\r\n            <img src={close_icon} alt=\"\" width={50} height={50} onClick={close} style={{ cursor: 'pointer' }} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Update;\r\n","export const getCroppedImg = async (\r\n  imageSrc,\r\n  pixelCrop,\r\n  rotation = 0,\r\n  flip = { horizontal: false, vertical: false }\r\n) => {\r\n  const image = await createImage(imageSrc);\r\n  const canvas = document.createElement(\"canvas\");\r\n  const ctx = canvas.getContext(\"2d\");\r\n\r\n  if (!ctx) {\r\n    return null;\r\n  }\r\n\r\n  const rotRad = getRadianAngle(rotation);\r\n\r\n  \r\n  const { width: bBoxWidth, height: bBoxHeight } = rotateSize(\r\n    image.width,\r\n    image.height,\r\n    rotation\r\n  );\r\n\r\n  canvas.width = bBoxWidth;\r\n  canvas.height = bBoxHeight;\r\n\r\n  ctx.translate(bBoxWidth / 2, bBoxHeight / 2);\r\n  ctx.rotate(rotRad);\r\n  ctx.scale(flip.horizontal ? -1 : 1, flip.vertical ? -1 : 1);\r\n  ctx.translate(-image.width / 2, -image.height / 2);\r\n\r\n  // draw rotated image\r\n  ctx.drawImage(image, 0, 0);\r\n\r\n  const croppedCanvas = document.createElement(\"canvas\");\r\n\r\n  const croppedCtx = croppedCanvas.getContext(\"2d\");\r\n\r\n  if (!croppedCtx) {\r\n    return null;\r\n  }\r\n\r\n  // Set the size of the cropped canvas\r\n  croppedCanvas.width = pixelCrop.width;\r\n  croppedCanvas.height = pixelCrop.height;\r\n\r\n  // Draw the cropped image onto the new canvas\r\n  croppedCtx.drawImage(\r\n    canvas,\r\n    pixelCrop.x,\r\n    pixelCrop.y,\r\n    pixelCrop.width,\r\n    pixelCrop.height,\r\n    0,\r\n    0,\r\n    pixelCrop.width,\r\n    pixelCrop.height\r\n  );\r\n\r\n  \r\n\r\n  // As a blob\r\n  return new Promise((resolve, reject) => {\r\n    croppedCanvas.toBlob((file) => {\r\n      resolve(URL.createObjectURL(file));\r\n    }, \"image/jpeg\");\r\n  });\r\n};\r\nexport const createImage = (url) =>\r\n  new Promise((resolve, reject) => {\r\n    const image = new Image();\r\n    image.addEventListener(\"load\", () => resolve(image));\r\n    image.addEventListener(\"error\", (error) => reject(error));\r\n    image.setAttribute(\"crossOrigin\", \"anonymous\"); \r\n    image.src = url;\r\n  });\r\n\r\nexport function getRadianAngle(degreeValue) {\r\n  return (degreeValue * Math.PI) / 180;\r\n}\r\n\r\nexport function rotateSize(width, height, rotation) {\r\n  const rotRad = getRadianAngle(rotation);\r\n\r\n  return {\r\n    width:\r\n      Math.abs(Math.cos(rotRad) * width) + Math.abs(Math.sin(rotRad) * height),\r\n    height:\r\n      Math.abs(Math.sin(rotRad) * width) + Math.abs(Math.cos(rotRad) * height),\r\n  };\r\n}","export default __webpack_public_path__ + \"static/media/upload.8f065011.svg\";","import React, { useRef, useState } from \"react\";\r\nimport Cropper from \"react-easy-crop\";\r\nimport { getCroppedImg } from \"./cropImage\";\r\nimport \"./CreatorRegistration.css\";\r\nimport upload from \"../../assets/upload.svg\";\r\nimport Popup from \"reactjs-popup\";\r\n\r\nimport { IoClose } from \"react-icons/io5\";\r\nimport categories from \"../../assets/categories\";\r\n\r\nconst CreatorRegistration = ({ close }) => {\r\n  const [image, setImage] = useState(null);\r\n  const [crop, setCrop] = useState({ x: 0, y: 0 });\r\n  const [zoom, setZoom] = useState(1);\r\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState(null);\r\n  const [croppedImage, setCroppedImage] = useState(null);\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [isValid, setIsValid] = useState(true);\r\n  const fileInputRef = useRef(null);\r\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\r\n\r\n  const handleImageUpload = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      setImage(URL.createObjectURL(file));\r\n      setIsPopupOpen(true);\r\n    }\r\n  };\r\n  const openFilePicker = () => {\r\n    fileInputRef.current.click();\r\n  };\r\n\r\n  const onCropChange = (crop) => {\r\n    setCrop(crop);\r\n  };\r\n\r\n  const onZoomChange = (zoom) => {\r\n    setZoom(zoom);\r\n  };\r\n  const onCropComplete = (croppedArea, croppedAreaPixels) => {\r\n    setCroppedAreaPixels(croppedAreaPixels);\r\n  };\r\n\r\n  const handleCropConfirm = async () => {\r\n    if (!croppedAreaPixels) {\r\n      return;\r\n    }\r\n\r\n    const croppedImage = await getCroppedImg(image, croppedAreaPixels);\r\n    setCroppedImage(croppedImage);\r\n    setIsPopupOpen(false);\r\n  };\r\n\r\n  const handlePhone = (e) => {\r\n    const tel = e.target.value;\r\n    setPhone(tel);\r\n    if (tel.length === 10) {\r\n      const regex = /^[1-9][0-9]*$/;\r\n      setIsValid(regex.test(tel));\r\n    } else {\r\n      setIsValid(tel.length === 0);\r\n    }\r\n  };\r\n  // Utility function to convert blob URL to File\r\n  async function urlToFile(url, filename, mimeType) {\r\n    const response = await fetch(url);\r\n    const blob = await response.blob();\r\n    return new File([blob], filename, { type: mimeType });\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (croppedImage) {\r\n      if (isValid) {\r\n        document\r\n          .getElementById(\"register-btn\")\r\n          .setAttribute(\"disabled\", \"true\");\r\n\r\n        const data = {\r\n          type: document.getElementById(\"type\").value,\r\n          userName: document.getElementById(\"username\").value,\r\n          location: document.getElementById(\"location\").value,\r\n          phone: phone,\r\n          insta: document.getElementById(\"instaurl\").value,\r\n          instacount: document.getElementById(\"instacount\").value,\r\n          twitter: document.getElementById(\"twitterurl\").value,\r\n          twittercount: document.getElementById(\"twittercount\").value,\r\n          linkedin: document.getElementById(\"linkedinurl\").value,\r\n          linkedincount: document.getElementById(\"linkedincount\").value,\r\n          facebook: document.getElementById(\"facebookurl\").value,\r\n          facebookcount: document.getElementById(\"facebookcount\").value,\r\n          youtube: document.getElementById(\"youtubeurl\").value,\r\n          youtubecount: document.getElementById(\"youtubecount\").value,\r\n        };\r\n\r\n        const formData = new FormData();\r\n\r\n        for (let key in data) {\r\n          formData.append(key, data[key]);\r\n        }\r\n\r\n        try {\r\n          const profileImageFile = await urlToFile(\r\n            croppedImage,\r\n            \"profile-image.jpg\",\r\n            \"image/jpeg\"\r\n          );\r\n          formData.append(\"profileImage\", profileImageFile);\r\n\r\n          fetch(e.target.action, {\r\n            method: \"post\",\r\n            body: formData,\r\n            credentials: \"include\",\r\n          })\r\n            .then((res) => res.json())\r\n            .then((res) => {\r\n              document\r\n                .getElementById(\"register-btn\")\r\n                .removeAttribute(\"disabled\");\r\n              if (!res.success) {\r\n                alert(res.error);\r\n              } else {\r\n                sessionStorage.setItem(\"creator\", res.creator.approved);\r\n                alert(res.message);\r\n                // window.location.reload();\r\n                close();\r\n              }\r\n            });\r\n        } catch (error) {\r\n          console.error(\"Error converting blob URL to file:\", error);\r\n          alert(\"Failed to upload image.\");\r\n        }\r\n      } else {\r\n        alert(`Mobile Number is Invalid or Image Size Exceeds 1MB`);\r\n      }\r\n    } else {\r\n      if (isValid) {\r\n        alert(\"Please upload an image.\");\r\n      } else {\r\n        alert(\"Mobile Number is Invalid\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h2>Register</h2>\r\n      <form\r\n        action={`${process.env.REACT_APP_BASE_URL}v1/apis/register`}\r\n        encType=\"multipart/form-data\"\r\n        method=\"post\"\r\n        onSubmit={(e) => {\r\n          handleSubmit(e);\r\n        }}\r\n        className=\"reg-form\"\r\n      >\r\n        <div className=\"top-form\">\r\n          <div className=\"top-left-form\">\r\n            <div className=\"form-group\">\r\n              <label>Username</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"username\"\r\n                placeholder=\"Username\"\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label>Type</label>\r\n              <select id=\"type\" required>\r\n                {categories.map((ele) => (\r\n                  <option value={ele}>{ele}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label>Location</label>\r\n              <input type=\"text\" id=\"location\" placeholder=\"Enter location\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"profile-picture-section\">\r\n            <input\r\n              type=\"file\"\r\n              onChange={handleImageUpload}\r\n              ref={fileInputRef}\r\n              required\r\n              style={{ display: \"none\" }}\r\n            />\r\n\r\n            <label>Profile Picture</label>\r\n\r\n            <div>\r\n              <img\r\n                src={croppedImage || upload}\r\n                alt=\"upload_image\"\r\n                className=\"preview\"\r\n                onClick={openFilePicker}\r\n              />\r\n\r\n              <Popup\r\n                open={isPopupOpen}\r\n                modal\r\n                closeOnDocumentClick={false}\r\n                onClose={() => setIsPopupOpen(false)}\r\n              >\r\n                <div className=\"crop-container\">\r\n                  {image ? (\r\n                    <>\r\n                      <Cropper\r\n                        image={image}\r\n                        crop={crop}\r\n                        zoom={zoom}\r\n                        aspect={130 / 80}\r\n                        onCropChange={onCropChange}\r\n                        onZoomChange={onZoomChange}\r\n                        onCropComplete={onCropComplete}\r\n                      />\r\n                      <button type=\"button\" onClick={handleCropConfirm}>\r\n                        Crop & Save\r\n                      </button>\r\n                    </>\r\n                  ) : (\r\n                    <p>Please select an image to crop.</p>\r\n                  )}\r\n                </div>\r\n              </Popup>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"bottom-form\">\r\n          <div className=\"form-group\">\r\n            <label>Phone</label>\r\n            <input\r\n              type=\"tel\"\r\n              value={phone}\r\n              onChange={handlePhone}\r\n              placeholder=\"Phone\"\r\n              required\r\n            />\r\n            {!isValid && <span className=\"error\">Invalid phone number</span>}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Instagrma</label>\r\n            <div>\r\n              <input type=\"url\" id=\"instaurl\" placeholder=\"Link\" />\r\n              <input\r\n                type=\"text\"\r\n                id=\"instacount\"\r\n                placeholder=\"Number of Followers\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>youtube</label>\r\n            <div>\r\n              <input type=\"url\" id=\"youtubeurl\" placeholder=\"Link\" />\r\n              <input\r\n                type=\"text\"\r\n                id=\"youtubecount\"\r\n                placeholder=\"Number of Followers\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Facebook</label>\r\n            <div>\r\n              <input type=\"url\" id=\"facebookurl\" placeholder=\"Link\" />\r\n              <input\r\n                type=\"text\"\r\n                id=\"facebookcount\"\r\n                placeholder=\"Number of Followers\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>LinkedIn</label>\r\n            <div>\r\n              <input type=\"url\" id=\"linkedinurl\" placeholder=\"Link\" />\r\n              <input\r\n                type=\"text\"\r\n                id=\"linkedincount\"\r\n                placeholder=\"Number of Followers\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Twitter</label>\r\n            <div>\r\n              <input type=\"url\" id=\"twitterurl\" placeholder=\"Link\" />\r\n              <input\r\n                type=\"text\"\r\n                id=\"twittercount\"\r\n                placeholder=\"Number of Followers\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <button id=\"register-btn\" className=\"submit-button\" type=\"submit\">\r\n          Done\r\n        </button>\r\n      </form>\r\n\r\n      <IoClose className=\"close\" onClick={close} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreatorRegistration;\r\n","import React, { useRef, useState } from \"react\";\r\nimport Cropper from \"react-easy-crop\";\r\nimport { getCroppedImg } from \"../Register/cropImage\";\r\nimport \"../Register/CreatorRegistration.css\";\r\nimport upload from \"../../assets/upload.svg\";\r\nimport Popup from \"reactjs-popup\";\r\n\r\nimport { IoClose } from \"react-icons/io5\";\r\nimport categories from \"../../assets/categories\";\r\n\r\nconst UpdateCreator = ({ close }) => {\r\n  const [image, setImage] = useState(null);\r\n  const [crop, setCrop] = useState({ x: 0, y: 0 });\r\n  const [zoom, setZoom] = useState(1);\r\n  const [croppedAreaPixels, setCroppedAreaPixels] = useState(null);\r\n  const [croppedImage, setCroppedImage] = useState(null);\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [isValid, setIsValid] = useState(true);\r\n  const fileInputRef = useRef(null);\r\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\r\n\r\n  const handleImageUpload = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      setImage(URL.createObjectURL(file));\r\n      setIsPopupOpen(true);\r\n    }\r\n  };\r\n  const openFilePicker = () => {\r\n    fileInputRef.current.click();\r\n  };\r\n\r\n  const onCropChange = (crop) => {\r\n    setCrop(crop);\r\n  };\r\n\r\n  const onZoomChange = (zoom) => {\r\n    setZoom(zoom);\r\n  };\r\n  const onCropComplete = (croppedArea, croppedAreaPixels) => {\r\n    setCroppedAreaPixels(croppedAreaPixels);\r\n  };\r\n\r\n  const handleCropConfirm = async () => {\r\n    if (!croppedAreaPixels) {\r\n      return;\r\n    }\r\n\r\n    const croppedImage = await getCroppedImg(image, croppedAreaPixels);\r\n    setCroppedImage(croppedImage);\r\n    setIsPopupOpen(false);\r\n  };\r\n\r\n  const handlePhone = (e) => {\r\n    const tel = e.target.value;\r\n    setPhone(tel);\r\n    if (tel.length === 10) {\r\n      const regex = /^[1-9][0-9]*$/;\r\n      setIsValid(regex.test(tel));\r\n    } else {\r\n      setIsValid(tel.length === 0);\r\n    }\r\n  };\r\n  // Utility function to convert blob URL to File\r\n  async function urlToFile(url, filename, mimeType) {\r\n    const response = await fetch(url);\r\n    const blob = await response.blob();\r\n    return new File([blob], filename, { type: mimeType });\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (croppedImage) {\r\n      if (isValid) {\r\n        document\r\n          .getElementById(\"register-btn\")\r\n          .setAttribute(\"disabled\", \"true\");\r\n\r\n        const data = {\r\n          type: document.getElementById(\"type\").value,\r\n          userName: document.getElementById(\"username\").value,\r\n          location: document.getElementById(\"location\").value,\r\n          phone: phone,\r\n          insta: document.getElementById(\"instaurl\").value,\r\n          instacount: document.getElementById(\"instacount\").value,\r\n          twitter: document.getElementById(\"twitterurl\").value,\r\n          twittercount: document.getElementById(\"twittercount\").value,\r\n          linkedin: document.getElementById(\"linkedinurl\").value,\r\n          linkedincount: document.getElementById(\"linkedincount\").value,\r\n          facebook: document.getElementById(\"facebookurl\").value,\r\n          facebookcount: document.getElementById(\"facebookcount\").value,\r\n          youtube: document.getElementById(\"youtubeurl\").value,\r\n          youtubecount: document.getElementById(\"youtubecount\").value,\r\n        };\r\n\r\n        const formData = new FormData();\r\n\r\n        for (let key in data) {\r\n          formData.append(key, data[key]);\r\n        }\r\n\r\n        try {\r\n          const profileImageFile = await urlToFile(\r\n            croppedImage,\r\n            \"profile-image.jpg\",\r\n            \"image/jpeg\"\r\n          );\r\n          formData.append(\"profileImage\", profileImageFile);\r\n\r\n          fetch(e.target.action, {\r\n            method: \"post\",\r\n            body: formData,\r\n            credentials: \"include\",\r\n          })\r\n            .then((res) => res.json())\r\n            .then((res) => {\r\n              document\r\n                .getElementById(\"register-btn\")\r\n                .removeAttribute(\"disabled\");\r\n              if (!res.success) {\r\n                alert(res.error);\r\n                 document\r\n                   .getElementById(\"update-btn\")\r\n                   .removeAttribute(\"disabled\");\r\n              } else {\r\n                               sessionStorage.setItem(\"creator\", true);\r\n                               alert(res.message);\r\n                // window.location.reload();\r\n                close();\r\n              }\r\n            });\r\n        } catch (error) {\r\n          console.error(\"Error converting blob URL to file:\", error);\r\n          alert(\"Failed to upload image.\");\r\n        }\r\n      } else {\r\n        alert(`Mobile Number is Invalid or Image Size Exceeds 1MB`);\r\n      }\r\n    } else {\r\n      if (isValid) {\r\n        alert(\"Please upload an image.\");\r\n      } else {\r\n        alert(\"Mobile Number is Invalid\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h2>Edit Creator Details</h2>\r\n      <form\r\n        action={`${process.env.REACT_APP_BASE_URL}v1/apis/edit`}\r\n        encType=\"multipart/form-data\"\r\n        method=\"post\"\r\n        onSubmit={(e) => {\r\n          handleSubmit(e);\r\n        }}\r\n        className=\"reg-form\"\r\n      >\r\n        <div className=\"top-form\">\r\n          <div className=\"top-left-form\">\r\n            <div className=\"form-group\">\r\n              <label>Username</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"username\"\r\n                placeholder=\"Username\"\r\n                \r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label>Type</label>\r\n              <select id=\"type\" >\r\n                {categories.map((ele) => (\r\n                  <option value={ele}>{ele}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label>Location</label>\r\n              <input type=\"text\" id=\"location\" placeholder=\"Enter location\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"profile-picture-section\">\r\n            <input\r\n              type=\"file\"\r\n              onChange={handleImageUpload}\r\n              ref={fileInputRef}\r\n              \r\n              style={{ display: \"none\" }}\r\n            />\r\n\r\n            <label>Profile Picture</label>\r\n\r\n            <div>\r\n              <img\r\n                src={croppedImage || upload}\r\n                alt=\"upload_image\"\r\n                className=\"preview\"\r\n                onClick={openFilePicker}\r\n              />\r\n\r\n              <Popup\r\n                open={isPopupOpen}\r\n                modal\r\n                closeOnDocumentClick={false}\r\n                onClose={() => setIsPopupOpen(false)}\r\n              >\r\n                <div className=\"crop-container\">\r\n                  {image ? (\r\n                    <>\r\n                      <Cropper\r\n                        image={image}\r\n                        crop={crop}\r\n                        zoom={zoom}\r\n                        aspect={130 / 80}\r\n                        onCropChange={onCropChange}\r\n                        onZoomChange={onZoomChange}\r\n                        onCropComplete={onCropComplete}\r\n                      />\r\n                      <button type=\"button\" onClick={handleCropConfirm}>\r\n                        Crop & Save\r\n                      </button>\r\n                    </>\r\n                  ) : (\r\n                    <p>Please select an image to crop.</p>\r\n                  )}\r\n                </div>\r\n              </Popup>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"bottom-form\">\r\n          <div className=\"form-group\">\r\n            <label>Phone</label>\r\n            <input\r\n              type=\"tel\"\r\n              value={phone}\r\n              onChange={handlePhone}\r\n              placeholder=\"Phone\"\r\n              \r\n            />\r\n            {!isValid && <span className=\"error\">Invalid phone number</span>}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Instagrma</label>\r\n            <div>\r\n              <input type=\"url\" id=\"instaurl\" placeholder=\"Link\" />\r\n              <input\r\n                type=\"text\"\r\n                id=\"instacount\"\r\n                placeholder=\"Number of Followers\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>youtube</label>\r\n            <div>\r\n              <input type=\"url\" id=\"youtubeurl\" placeholder=\"Link\" />\r\n              <input\r\n                type=\"text\"\r\n                id=\"youtubecount\"\r\n                placeholder=\"Number of Followers\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Facebook</label>\r\n            <div>\r\n              <input type=\"url\" id=\"facebookurl\" placeholder=\"Link\" />\r\n              <input\r\n                type=\"text\"\r\n                id=\"facebookcount\"\r\n                placeholder=\"Number of Followers\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>LinkedIn</label>\r\n            <div>\r\n              <input type=\"url\" id=\"linkedinurl\" placeholder=\"Link\" />\r\n              <input\r\n                type=\"text\"\r\n                id=\"linkedincount\"\r\n                placeholder=\"Number of Followers\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Twitter</label>\r\n            <div>\r\n              <input type=\"url\" id=\"twitterurl\" placeholder=\"Link\" />\r\n              <input\r\n                type=\"text\"\r\n                id=\"twittercount\"\r\n                placeholder=\"Number of Followers\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <button id=\"register-btn\" className=\"submit-button\" type=\"submit\">\r\n          Done\r\n        </button>\r\n      </form>\r\n\r\n      <IoClose className=\"close\" onClick={close} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateCreator;\r\n","import React, { useEffect, useState } from 'react'\r\nimport \"./Signup.css\"\r\nimport eye from \"../../assets/eye.svg\";\r\nimport { AiOutlineEyeInvisible, AiOutlineEye } from \"react-icons/ai\";\r\nexport const Signup = ({ setResponse }) => {\r\n  const [isLogin, setIsLogin] = useState(false);\r\n  const [name, setname] = useState(\"\");\r\n  const [state, setstate] = useState(\"signup\");\r\n  const [visible, setvisible] = useState(false);\r\n  const [password, setPassword] = useState(\"\");\r\n  const [isValid, setIsValid] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [clicked, setclicked] = useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [isValidEmail, setIsValidEmail] = useState(false);\r\n  const [errorMessageEmail, setErrorMessageEmail] = useState(\"\");\r\n  const [isChecked, setIsChecked] = useState(false);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const handleCheckboxChange = () => {\r\n    setIsChecked(!isChecked);\r\n  };\r\n\r\n  const validateEmail = (email) => {\r\n    // Basic email regex pattern\r\n    const emailPattern = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n    return emailPattern.test(email);\r\n  };\r\n  const handleEmail = (e) => {\r\n    const inputEmail = e.target.value;\r\n    setEmail(inputEmail);\r\n\r\n    if (validateEmail(inputEmail)) {\r\n      setIsValidEmail(true);\r\n      setErrorMessageEmail(\"\");\r\n    } else {\r\n      setIsValidEmail(false);\r\n      setErrorMessageEmail(\"Please enter a valid email address\");\r\n    }\r\n  };\r\n\r\n  const validatePassword = (password) => {\r\n    const minLength = 8;\r\n    const specialChar = /[!@#$%^&*(),.?\":{}|<>]/;\r\n    const upperCase = /[A-Z]/;\r\n    const lowerCase = /[a-z]/;\r\n    const number = /[0-9]/;\r\n\r\n    if (password.length < minLength) {\r\n      return \"Password must be at least 8 characters long\";\r\n    }\r\n    if (!specialChar.test(password)) {\r\n      return \"Password must contain at least one special character\";\r\n    }\r\n    if (!upperCase.test(password)) {\r\n      return \"Password must contain at least one uppercase letter\";\r\n    }\r\n    if (!lowerCase.test(password)) {\r\n      return \"Password must contain at least one lowercase letter\";\r\n    }\r\n    if (!number.test(password)) {\r\n      return \"Password must contain at least one number\";\r\n    }\r\n    return \"\";\r\n  };\r\n  useEffect(() => {\r\n    const password = document.getElementById(\"password\");\r\n    if (visible) {\r\n      password.setAttribute(\"type\", \"text\");\r\n    } else {\r\n      password.setAttribute(\"type\", \"password\");\r\n    }\r\n  }, [visible]);\r\n  // let name=\"\";\r\n  // let email=\"\";\r\n  // let password=\"\";\r\n\r\n  const handlelogin = async () => {\r\n    const formdata = {\r\n      email: document.getElementById(\"email\").value,\r\n      password: document.getElementById(\"password\").value,\r\n    };\r\n\r\n    await fetch(`${process.env.REACT_APP_BASE_URL}v1/apis/login`, {\r\n      credentials: \"include\",\r\n      method: \"POST\",\r\n\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n      body: JSON.stringify(formdata),\r\n    })\r\n      .then((res) => {\r\n        console.log(res);\r\n        return res.json();\r\n      })\r\n      .then((res) => {\r\n        console.log(\"login response\", res);\r\n        if (res.success) {\r\n          alert(\"You are Successfully Logged In\");\r\n          sessionStorage.setItem(\"State\", \"login\");\r\n          console.log(res.iscreator);\r\n          setResponse(res.iscreator, sessionStorage.getItem(\"State\"));\r\n          sessionStorage.setItem(\"creator\", res.iscreator);\r\n          sessionStorage.setItem(\"email\", res.email);\r\n          window.location.reload();\r\n        } else {\r\n          alert(res.error);\r\n        }\r\n      });\r\n  };\r\n  const handleChange = (e) => {\r\n    const inputPassword = e.target.value;\r\n    setPassword(inputPassword);\r\n\r\n    const error = validatePassword(inputPassword);\r\n    setErrorMessage(error);\r\n    setIsValid(!error);\r\n  };\r\n  const handlePassword = (e) => {\r\n    if (e.target.value.length == 0 && !clicked) {\r\n      alert(`Password Should include:\r\n        * Password must be at least 8 characters long.\r\n        * Password must contain at least one special character.\r\n        * Password must contain at least one uppercase letter.\r\n        * Password must contain at least one lowercase letter.\r\n        * Password must contain at least one number.`);\r\n      setclicked(true);\r\n    }\r\n  };\r\n\r\n  const handlesignup = async (e) => {\r\n    e.preventDefault();\r\n    if (isValid && isValidEmail) {\r\n      const formdata = {\r\n        name,\r\n        email,\r\n        password,\r\n        isChecked,\r\n      };\r\n      console.log(\"formdata\",formdata)\r\n      await fetch(`${process.env.REACT_APP_BASE_URL}v1/apis/signup`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n        body: JSON.stringify(formdata),\r\n        credentials: \"include\",\r\n      })\r\n        .then((res) => res.json())\r\n        .then((res) => {\r\n          if (res.success) {\r\n            sessionStorage.setItem(\"State\", \"login\");\r\n            setResponse(res.iscreator, sessionStorage.getItem(\"State\"));\r\n            sessionStorage.setItem(\"creator\", res.iscreator);\r\n            sessionStorage.setItem(\"email\", res.email);\r\n            alert(\"Sign Up Sucessfull!\");\r\n            window.location.reload();\r\n          } else {\r\n            alert(res.error);\r\n          }\r\n        });\r\n    } else if (isValidEmail) {\r\n      alert(`Password is Invalid`);\r\n    } else if (isValid) {\r\n      alert(\"Email is Invalid\");\r\n    } else {\r\n      alert(`Password and Email are Invalid`);\r\n    }\r\n  };\r\n  return (\r\n    <section className={`auth-wrapper ${isLogin ? \"auth-active\" : \"\"}`}>\r\n      <div className=\"auth-form auth-signup\">\r\n        <header onClick={() => setIsLogin(false)}>Signup</header>\r\n        <form onSubmit={(e) => handlesignup(e)}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Full name\"\r\n            required\r\n            name=\"name\"\r\n            id=\"name\"\r\n            value={name}\r\n            onChange={(e) => setname(e.target.value)}\r\n          />\r\n          <input\r\n            placeholder=\"Email address\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            id=\"email\"\r\n            value={email}\r\n            onInput={(e) => {\r\n              handleEmail(e);\r\n            }}\r\n            required\r\n          />\r\n          <div\r\n            style={{\r\n              fontSize: \"12px\",\r\n              color: isValidEmail ? \"green\" : \"red\",\r\n            }}\r\n          >\r\n            {isValidEmail ? \"Email is valid\" : errorMessageEmail}\r\n          </div>\r\n          <div className=\"password\">\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              id=\"password\"\r\n              value={password}\r\n              onClick={(e) => handlePassword(e)}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n            {/* <span\r\n              onClick={() => {setShowPassword((prev) => !prev)\r\n                setvisible(!visible);\r\n              }}\r\n              className=\" eye absolute right-3 top-[38px] z-[10] cursor-pointer\"\r\n            >\r\n              {showPassword ? (\r\n                <AiOutlineEyeInvisible fontSize={24} fill=\"#AFB2BF\" />\r\n              ) : (\r\n                <AiOutlineEye fontSize={24} fill=\"#AFB2BF\" />\r\n              )}\r\n            </span> */}\r\n          </div>\r\n          <div\r\n            style={{\r\n              fontSize: \"12px\",\r\n              color: isValid ? \"green\" : \"red\",\r\n            }}\r\n          >\r\n            {isValid ? \"Password is valid\" : errorMessage}\r\n          </div>\r\n\r\n          <div className=\"auth-checkbox\">\r\n            <input\r\n              type=\"checkbox\"\r\n              id=\"auth-signupCheck\"\r\n              onChange={handleCheckboxChange}\r\n            />\r\n            <label htmlFor=\"auth-signupCheck\">Signup as a Brand</label>\r\n          </div>\r\n          <input type=\"submit\" value=\"Signup\" />\r\n        </form>\r\n      </div>\r\n\r\n      <div className=\"auth-form auth-login\">\r\n        <header onClick={() => setIsLogin(true)}>Login</header>\r\n        <form\r\n          onSubmit={(e) => {\r\n            handlelogin();\r\n            e.preventDefault();\r\n          }}\r\n        >\r\n          <input\r\n            placeholder=\"Email address\"\r\n            required\r\n            type=\"email\"\r\n            name=\"email\"\r\n            id=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            required\r\n            name=\"password\"\r\n            id=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          {/* <a href=\"#\">Forgot password?</a> */}\r\n          <input type=\"submit\" value=\"Login\" />\r\n        </form>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport './Navbar.css'\r\nimport logo from '../../assets/logo.png'\r\nimport { Link } from \"react-router-dom\";\r\nimport Popup from \"reactjs-popup\";\r\nimport Login from \"../login/Login\";\r\nimport Update from \"../Update/Update\";\r\nimport dotnenv from 'dotenv'\r\nimport { GiHamburgerMenu } from \"react-icons/gi\";\r\nimport CreatorRegistration from \"../Register/CreatorRegistraion\";\r\nimport UpdateCreator from \"../Update/UpdateCreator\";\r\nimport { Signup } from \"../login/Signup\";\r\ndotnenv.config();\r\n\r\n\r\n\r\nconst Navbar = ({ SetBlur }) => {\r\n  const [State, setState] = useState(sessionStorage.getItem(\"State\"));\r\n  const [creator, setcreator] = useState(sessionStorage.getItem(\"creator\"));\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n   const [isBlurred, setIsBlurred] = useState(false);\r\n\r\n   const toggleBlur = () => {\r\n     setIsBlurred((prev) => !prev);\r\n   };\r\n  const toggleMenu = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n  const fetchdata = (data, st) => {\r\n    setcreator(data);\r\n    setState(st);\r\n  };\r\n\r\n  const logout = () => {\r\n    fetch(`${process.env.REACT_APP_BASE_URL}v1/apis/logout`, {\r\n      method: \"post\",\r\n      credentials: \"include\",\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        sessionStorage.setItem(\"State\", \"logout\");\r\n        sessionStorage.removeItem(\"creator\");\r\n        sessionStorage.removeItem(\"email\");\r\n        alert(res.message);\r\n        setState(sessionStorage.getItem(\"State\"));\r\n        window.location.reload();\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className={`nav-container ${isBlurred ? \"blurred\" : \"\"}`}>\r\n      <div className=\"navbar\">\r\n        <div className=\"nav\">\r\n          <div className=\"nav-links\">\r\n            <Link\r\n              to=\"/\"\r\n\r\n              className=\"nav-logo-container\"\r\n            >\r\n              <img src={logo} alt=\"Logo\" className=\"nav-logo\" />\r\n            </Link>\r\n            <Link to=\"/creators\" className=\"nav-link\">\r\n              Creators\r\n            </Link>\r\n            <Link to=\"/deals\" className=\"nav-link\">\r\n              Deals\r\n            </Link>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"nav-icons-list\">\r\n          {State === \"login\" ? (\r\n            creator === \"true\" ? (\r\n              <Popup\r\n                trigger={\r\n                  <button type=\"button\" className=\"nav-btn\">\r\n                    Update Creator Id\r\n                  </button>\r\n                }\r\n                closeOnDocumentClick={false}\r\n                onOpen={() => SetBlur(true)}\r\n                onClose={() => SetBlur(false)}\r\n                modal\r\n              >\r\n                {(close) => <UpdateCreator close={close} />}\r\n              </Popup>\r\n            ) : creator === \"false\" ? (\r\n              <Popup\r\n                trigger={\r\n                  <button type=\"button\" className=\"nav-btn\">\r\n                    Register as Creator\r\n                  </button>\r\n                }\r\n                closeOnDocumentClick={false}\r\n                modal\r\n                onOpen={() => SetBlur(true)}\r\n                onClose={() => SetBlur(false)}\r\n                nested\r\n              >\r\n                {(close) => <CreatorRegistration close={close} />}\r\n              </Popup>\r\n            ) : (\r\n              <button type=\"button\" className=\"nav-btn\">\r\n                Waiting for Approval\r\n              </button>\r\n            )\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {State !== \"login\" ? (\r\n            <Popup\r\n              className=\"login-popup\"\r\n              trigger={\r\n                <button type=\"button\" className=\"nav-btn\">\r\n                  Sign Up/ Login\r\n                </button>\r\n              }\r\n              modal\r\n              onOpen={() => SetBlur(true)}\r\n              onClose={() => SetBlur(false)}\r\n            >\r\n              {(close) => <Signup setResponse={fetchdata} />}\r\n            </Popup>\r\n          ) : (\r\n            <button type=\"button\" className=\"nav-btn\" onClick={logout}>\r\n              Log Out\r\n            </button>\r\n          )}\r\n        </div>\r\n        <div onClick={toggleMenu} className=\"hamburger-icon\">\r\n          <GiHamburgerMenu size={24} />\r\n        </div>\r\n        <div className={`sidebar ${isOpen ? \"open\" : \"\"}`}>\r\n          <div>\r\n            <Link to=\"/\" className=\"nav-logo-container\">\r\n              <img src={logo} alt=\"Logo\" className=\"nav-logo\" />\r\n            </Link>\r\n          </div>\r\n\r\n          <div className=\"hamburger-links\">\r\n            <Link\r\n              to=\"/creators\"\r\n              className=\"hamburger-link\"\r\n              onClick={toggleMenu}\r\n            >\r\n              Creators\r\n            </Link>\r\n            <Link to=\"/deals\" className=\"hamburger-link\" onClick={toggleMenu}>\r\n              Deals\r\n            </Link>\r\n            {State === \"login\" ? (\r\n              creator === \"true\" ? (\r\n                <Popup\r\n                  trigger={\r\n                    <p\r\n                      type=\"button\"\r\n                      className=\"hamburger-link\"\r\n                      onClick={toggleMenu}\r\n                    >\r\n                      Update Creator Id\r\n                    </p>\r\n                  }\r\n                  closeOnDocumentClick={false}\r\n                  onOpen={() => SetBlur(true)}\r\n                  onClose={() => SetBlur(false)}\r\n                  modal\r\n                >\r\n                  {(close) => <UpdateCreator close={close} />}\r\n                </Popup>\r\n              ) : creator === \"false\" ? (\r\n                <Popup\r\n                  trigger={\r\n                    <p\r\n                      type=\"button\"\r\n                      className=\"hamburger-link\"\r\n                      onClick={toggleMenu}\r\n                    >\r\n                      Register as Creator\r\n                    </p>\r\n                  }\r\n                  closeOnDocumentClick={false}\r\n                  onOpen={() => SetBlur(true)}\r\n                  onClose={() => SetBlur(false)}\r\n                  modal\r\n                  nested\r\n                >\r\n                  {(close) => <CreatorRegistration close={close} />}\r\n                </Popup>\r\n              ) : (\r\n                <p type=\"button\" className=\"hamburger-link\">\r\n                  Waiting for Approval\r\n                </p>\r\n              )\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {State !== \"login\" ? (\r\n              <Popup\r\n                className=\"login-popup\"\r\n                trigger={\r\n                  <p type=\"button\" className=\"hamburger-link\">\r\n                    Sign Up/ Login\r\n                  </p>\r\n                }\r\n                modal\r\n                onOpen={() => SetBlur(true)}\r\n                onClose={() => SetBlur(false)}\r\n              >\r\n                {(close) => <Signup setResponse={fetchdata} />}\r\n              </Popup>\r\n            ) : (\r\n              <p\r\n                type=\"button\"\r\n                className=\"hamburger-link\"\r\n                onClick={() => {\r\n                  logout();\r\n                  toggleMenu();\r\n                }}\r\n              >\r\n                Log Out\r\n              </p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Navbar;\r\n","import React from 'react'\r\nimport './Footer.css'\r\n\r\nimport {\r\n  FaInstagram,\r\n  FaFacebook,\r\n  FaYoutube,\r\n  FaLinkedin,\r\n} from \"react-icons/fa\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer-container\">\r\n      <div className=\"footer-upper\">\r\n        <div className=\"handle\">\r\n          <a href=\"https://www.instagram.com/thedrag.club/\">\r\n            <FaInstagram className=\"handle\" />\r\n          </a>\r\n          <a href=\"\">\r\n            <FaFacebook className=\"handle\" />\r\n          </a>\r\n          <a href=\"https://www.linkedin.com/company/thedrag/\">\r\n            <FaLinkedin className=\"handle\" />\r\n          </a>\r\n          <a href=\"\">\r\n            <FaYoutube className=\"handle\" />\r\n          </a>\r\n        </div>\r\n\r\n        <p >DRAG</p>\r\n      </div>\r\n      <div\r\n        className=\"query\"\r\n        style={{\r\n          margin: \"20px auto\",\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          fontFamily: \"poppins\",\r\n          fontSize: \"20px\",\r\n          color: \"#FAFAFA\",\r\n          fontWeight: \"500\",\r\n        }}\r\n      >\r\n        <p style={{ textAlign: \"center\" }}>Queries: info@thedrag.in</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer\r\n","import React, { Suspense, lazy, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Navbar from \"./components/Navbar/Navbar.jsx\";\r\nimport Footer from \"./components/Footer/Footer.jsx\";\r\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\r\n\r\nconst Promotions = lazy(() => import(\"./Pages/Promotions/Promotions.jsx\"));\r\nconst Deals = lazy(() => import(\"./components/Deals/Deals.jsx\"));\r\n\r\nfunction App() {\r\n  const [isblur, SetBlur] = useState(false);\r\n\r\n  return (\r\n    <div className={`container ${isblur ? \"background\" : \"\"}`}>\r\n      <BrowserRouter>\r\n        <Navbar SetBlur={SetBlur} />\r\n\r\n        <Suspense\r\n          fallback={\r\n            <div className=\"loading\">\r\n              <div className=\"loader\"></div>\r\n            </div>\r\n          }\r\n        >\r\n          <Routes>\r\n            <Route path=\"/\" element={<Promotions SetBlur={SetBlur} />} />\r\n            <Route\r\n              path=\"/creators\"\r\n              element={<Promotions SetBlur={SetBlur} />}\r\n            />\r\n            <Route path=\"/deals\" element={<Deals SetBlur={SetBlur} />} />\r\n          </Routes>\r\n        </Suspense>\r\n\r\n        <Footer />\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React ,{ createContext } from \"react\";\r\n\r\n const DragContext=createContext();\r\n\r\n\r\n \r\n \r\n export default DragContext;\r\n \r\n\r\n\r\n \r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport \"./index.css\";\r\nimport App from \"./App.jsx\";\r\nimport DragContext from \"./Context/Dragcontext.js\";\r\nimport dotenv from \"dotenv\";\r\n\r\ndotenv.config();\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\n\r\n// Set session state if not already set\r\nif (sessionStorage.getItem(\"State\") == null) {\r\n  sessionStorage.setItem(\"State\", \"logout\");\r\n}\r\n\r\nroot.render(\r\n  <React.StrictMode>\r\n    <DragContext.Provider value={{}}>\r\n      <App />\r\n    </DragContext.Provider>\r\n  </React.StrictMode>\r\n);\r\n","const categories = ['Life Style', 'Food Blogger', 'Travel', 'Gaming', 'Beauty Influencer', 'Fashion', 'Fitness', 'Tech & Gadgets', 'Health & Wellness', 'Finance & Investing', 'Parenting', 'Education & Learning', 'DIY & Crafts', 'Art & Illustration', 'Music and Dance', 'Photography', 'Home Decor', 'Comedy', 'Entertainment', 'Motivational', 'Self-Help', 'Books & Literature', 'Pet Care & Training', 'Automotive & Vehicles', 'Sports', 'Fitness Training', 'Movie & TV Reviews', 'Gaming Commentary & Walkthroughs', 'Product Reviews & Unboxing', 'Sustainability', 'Eco-friendly Living', 'Mindfulness and Meditation', 'Outdoor and Adventure', 'Luxury Lifestyle', 'Event Planning', 'Career', 'Productivity', 'Spirituality', 'Film-making', 'Vlogging', 'Virtual Reality & Augmented Reality', 'Streetwear', 'Sneakers', 'Home Renovation & Improvement', 'Men’s Grooming', 'Tattoo Art and Body Modification', 'Relationship Advice', 'Social Commentary and Political Analysis', 'Photography Tutorials', 'Interior Design', 'Food Challenges', 'Language Learning', 'Minimalist Lifestyle', 'Cryptocurrency and Blockchain', 'Fashion Design', 'Mental Health Awareness', 'Digital Marketing', 'Business Growth'];\r\nexport default categories;","export default __webpack_public_path__ + \"static/media/close_icon.82ebf0e6.svg\";","import React from 'react';\r\nimport './Dropdown.css';\r\n\r\nconst Dropdown = ({ entries, input = null, category, setinput = null, Input = null, func = null }) => {\r\n  const handleChange = (item, isChecked) => {\r\n    if (category === \"location\") {\r\n      input(item);\r\n    } else {\r\n      setinput(item, isChecked);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"dropdown\"\r\n      onMouseEnter={() => func(true)}\r\n      onMouseLeave={() => func(false)}\r\n    >\r\n      <ul>\r\n        {entries.map((item, idx) => (\r\n          <li key={idx}>\r\n            {category === \"location\" ? (\r\n              <div onClick={() => handleChange(item, true)}>{item}</div>\r\n            ) : (\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name={item}\r\n                  id={idx}\r\n                  checked={Input.includes(item)}\r\n                  onChange={(e) => handleChange(item, e.target.checked)}\r\n                />\r\n                <p>{\" \" + item}</p>\r\n              </label>\r\n            )}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n"],"sourceRoot":""}